<?php

namespace  TechPromux\DynamicQueryBundle\Admin;

use Sonata\AdminBundle\Admin\Admin;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Form\FormMapper;
use Sonata\AdminBundle\Show\ShowMapper;
use  TechPromux\BaseBundle\Admin\Resource\BaseResourceAdmin;
use  TechPromux\DynamicQueryBundle\Manager\MetadataFieldManager;

class MetadataFieldAdmin extends BaseResourceAdmin
{
    /**
     * @return MetadataFieldManager
     */
    public function getResourceManager()
    {
        return parent::getResourceManager(); // TODO: Change the autogenerated stub
    }

    //---------------------------------------------------------------------------------

    protected function configureRoutes(\Sonata\AdminBundle\Route\RouteCollection $collection)
    {
        $collection->clearExcept(array('create', 'edit', 'delete'));
    }

    /**
     * @param FormMapper $formMapper
     */
    protected function configureFormFields(FormMapper $formMapper)
    {

        parent::configureFormFields($formMapper);

        $formMapper
            ->add('position', 'hidden', array('attr' => array('hidden' => true,
                'data-ctype' => 'metadata-field-position-field'
            )))
            ->add('enabled', null, array(
                'attr' => array(
                    'data-ctype' => 'metadata-field-enabled-field')
            ))
            ->add('tableWithFieldNames', 'text', array(
                'disabled' => true,
                'attr' => array(
                    'style' => 'min-width:500px',
                    'data-ctype' => 'metadata-field-tableWithFieldNames-field'
                )))
            ->add('title', null, array(
                'disabled' => false, 'attr' => array(
                    'style' => 'min-width:300px',
                    'data-ctype' => 'metadata-field-title-field'
                )))
            ->add('type', 'choice', array(
                    "choices" => $this->getResourceManager()->getMetadataManager()->getUtilDynamicQueryManager()->getFieldTypesChoices(),
                    "expanded" => false,
                    "multiple" => false,
                    'required' => true,
                    'disabled' => false,
                    'attr' => array('style' => 'max-width:120px',
                        'data-ctype' => 'metadata-field-type-field'
                    ),
                    'translation_domain' => $this->getResourceManager()->getBundleName()
                )
            );
    }

    public function getNewInstance()
    {
        $object = parent::getNewInstance(); // TODO: Change the autogenerated stub
        $object->setEnabled(true);
        return $object;
    }

    public function validate(\Sonata\CoreBundle\Validator\ErrorElement $errorElement, $object)
    {

        $errorElement
            ->with('title')
            ->assertNotBlank()
            ->end();

        $errorElement
            ->with('type')
            ->assertNotBlank()
            ->end();
    }


}
