<?php
/**
 * Created by PhpStorm.
 * User: franklin
 * Date: 27/05/2017
 * Time: 01:01
 */

namespace TechPromux\DynamicQueryBundle\Manager;

use TechPromux\BaseBundle\Manager\Resource\BaseResourceManager;
use TechPromux\DynamicQueryBundle\Entity\Metadata;
use TechPromux\DynamicQueryBundle\Entity\MetadataTable;

class MetadataTableManager extends BaseResourceManager
{

    /**
     *
     * @return string
     */
    public function getBundleName()
    {
        return 'TechPromuxDynamicQueryBundle';
    }

    /**
     * Get entity class name
     *
     * @return class
     */
    public function getResourceClass()
    {
        return MetadataTable::class;
    }

    /**
     * Get entity short name
     *
     * @return string
     */
    public function getResourceName()
    {
        return 'MetadataTable';
    }

    //--------------------------------------------------------------------------------------

    /**
     * @var MetadataManager
     */
    protected $metadata_manager;

    /**
     * @return MetadataManager
     */
    public function getMetadataManager()
    {
        return $this->metadata_manager;
    }

    /**
     * @param MetadataManager $metadata_manager
     * @return DataModelManager
     */
    public function setMetadataManager($metadata_manager)
    {
        $this->metadata_manager = $metadata_manager;
        return $this;
    }

    //---------------------------------------------------------------------------------------------

    /**
     *
     * @param Metadata $metadata
     * @return array
     */
    public function getTableNamesChoices(Metadata $metadata)
    {

        // por si acaso, obtener nuevamente la metadata de la base de datos

        $tables_metadatas = $metadata->getDataSource()->getMetadataInfo();

        $tables_names = array();

        foreach ($tables_metadatas as $table_metadata) {
            $tables_names[$table_metadata['name']] = $table_metadata['name'];
        }

        return $tables_names;
    }

    //-----------------------------------------------------------------------------

    /**
     * @param MetadataTable $object
     * @param bool $flushed
     * @return MetadataTable
     */
    public function prePersist($object, $flushed = true)
    {
        parent::prePersist($object, $flushed); // TODO: Change the autogenerated stub

        if ($object->getType() == 'query') {
            $object->setName($object->getCustomQuery());
        }
        else
        {
            $object->setName($object->getTableName());
        }
        return $object;
    }

    /**
     * @param MetadataTable $object
     * @param bool $flushed
     * @return MetadataTable
     */
    public function preUpdate($object, $flushed = true)
    {
        parent::preUpdate($object, $flushed); // TODO: Change the autogenerated stub
        if ($object->getType() == 'query') {
            $object->setName($object->getCustomQuery());
        }
        else
        {
            $object->setName($object->getTableName());
        }
        return $object;
    }
}