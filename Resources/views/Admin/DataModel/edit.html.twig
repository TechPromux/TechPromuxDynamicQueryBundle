{% extends "SonataAdminBundle:CRUD:edit.html.twig" %}

{% block navbar_title %}
    {{ parent() }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // utils functions

        function str_to_camel_case(string) {
            return ("_" + string.replace(/ /g, "_").toLowerCase()).replace(/(\_[a-z])/g, function ($1) {
                return $1.toUpperCase().replace('_', ' ')
            }).substring(1);
        }

        function capital_initials_letters(string) {
            var words = string.split(' ');
            var capitals = '';
            for (var i = 0; i < words.length; i++) {
                word = words[i].trim();
                if (word != '') {
                    capitals += word.charAt(0).toUpperCase();
                }
            }
            return capitals;
        }

        function apply_order_td_elements_by_position(entity_name, property_name, position_name) {

            $(document).on('sonata.add_element', '#field_container_{{ form.vars.id }}_' + property_name + 's', function () {

                var all_positions = $('input[data-ctype="' + entity_name + '-' + property_name + '-' + position_name + '"]');

                for (var i = all_positions.length - 1; i > 0; i--) {
                    for (var j = 0; j < i; j++) {
                        var all_ps = $('input[data-ctype="' + entity_name + '-' + property_name + '-' + position_name + '"]');

                        if ($(all_ps[j]).val() == '' || $(all_ps[j]).val() == null || parseInt($(all_ps[j]).val()) > parseInt($(all_ps[j + 1]).val())) {
                            var all_trs = $('#field_widget_{{ form.vars.id }}_' + property_name + 's' + ' tbody tr');
                            var row_1 = $(all_trs[j]);
                            var row_2 = $(all_trs[j + 1]);
                            $(row_1).insertAfter($(row_2));
                        }
                    }

                }

                var all_positions = $('input[data-ctype="' + entity_name + '-' + property_name + '-' + position_name + '"]');

                for (var i = 0; i < all_positions.length; i++) {
                    $(all_positions[i]).val(i);
                    $(all_positions[i]).parent().append('<a class="' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down btn" href="#' + entity_name + '-' + property_name + '-' + position_name + '-up" data-ctype="up" data-cpos="' + i + '" style="padding:5px 5px;"><span class="glyphicon glyphicon-arrow-up"></span></a>');
                    $(all_positions[i]).parent().append('<a class="' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down btn" href="#' + entity_name + '-' + property_name + '-' + position_name + '-down" data-ctype="down" data-cpos="' + i + '" style="padding:5px 5px;"><span class="glyphicon glyphicon-arrow-down"></span></a>');
                }
                $($('a.' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down[data-ctype="up"]')[0]).addClass('disabled');
                $($('a.' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down[data-ctype="down"]')[all_positions.length - 1]).addClass('disabled');
            });

            $(document).on('click', 'a.' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down', function () {

                var pos = parseInt($(this).attr('data-cpos'));

                var dir = $(this).attr('data-ctype');

                var pos_1 = -1;
                var pos_2 = -1;

                if (dir == 'up') {
                    pos_1 = pos - 1;
                    pos_2 = pos;
                } else if (dir == 'down') {
                    pos_1 = pos;
                    pos_2 = pos + 1;
                }

                var all_positions = $('input[data-ctype="' + entity_name + '-' + property_name + '-' + position_name + '"]');

                var value_1 = $(all_positions[pos_1]).val();
                var value_2 = $(all_positions[pos_2]).val();
                $(all_positions[pos_1]).val(value_2);
                $(all_positions[pos_2]).val(value_1);

                var trs = $('#field_widget_{{ form.vars.id }}_' + property_name + 's' + ' tbody tr');
                var row_1 = $(trs[pos_1]);
                var row_2 = $(trs[pos_2]);
                $(row_1).insertAfter($(row_2));

                // update arrows

                for (var i = 0; i < all_positions.length; i++) {
                    $($('a.' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down[data-ctype="up"]')[i]).removeClass('disabled');
                    $($('a.' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down[data-ctype="down"]')[i]).removeClass('disabled');
                    $($('a.' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down[data-ctype="up"]')[i]).attr('data-cpos', i);
                    $($('a.' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down[data-ctype="down"]')[i]).attr('data-cpos', i);
                }

                $($('a.' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down[data-ctype="up"]')[0]).addClass('disabled');
                $($('a.' + entity_name + '-' + property_name + '-' + position_name + '-arrow-up-down[data-ctype="down"]')[all_positions.length - 1]).addClass('disabled');

            });

        }
    </script>
    <script>
        // general options and configurations

        $(document).ready(function () {
            $('.sidebar-toggle').trigger('click');

        });
    </script>
    <script>
        // Step - details: options and configurations

        $(document).on('change', 'select[data-ctype="datamodel-detail-field"]', function (event) {

            var id = $(this).attr('id');
            var id_data = id.split('_');
            var form_id = id_data[0];
            var item_pos = id_data[2];

            var target_title_id = form_id + '_details_' + item_pos + '_title';
            var target_abbreviation_id = form_id + '_details_' + item_pos + '_abbreviation';

            $('#' + target_title_id).val(str_to_camel_case($(this).select2('data').text));
            $('#' + target_abbreviation_id).val(capital_initials_letters($(this).select2('data').text));

        });

        $details_first = true;

        $(document).on('sonata.add_element', '#field_container_{{ form.vars.id }}_details', function () {

            $('#field_container_{{ form.vars.id }}_details div.checkbox label span.control-label__text').remove();

            //var is_public_all = $('input[data-ctype="datamodel-detail-ispublic"]');

            if (!$details_first) {
                var field_all = $('select[data-ctype="datamodel-detail-field"]');
                $(field_all[field_all.length - 1]).trigger('change');
            }

            $details_first = false;

            $('#field_widget_{{ form.vars.id }}_details').append( $('<div></div>').attr('id', 'field_widget_div_{{ form.vars.id }}_details') );

            $('#field_widget_div_{{ form.vars.id }}_details').append( $('#field_widget_{{ form.vars.id }}_details table') );

            $('#field_widget_div_{{ form.vars.id }}_details').addClass('box-body table-responsive no-padding').css({'margin-bottom':'10px'});

        });

        // ADD DETAILS ORDERING BY POSITION ARROWS

        apply_order_td_elements_by_position('datamodel', 'detail', 'position');

        $(document).ready(function () {
            // ON DOCUMENT READY UPDATE ARROWS
            $('#field_container_{{ form.vars.id }}_details').trigger('sonata.add_element');
        });
    </script>

    <script>
        // Step - groups: options and configurations

        $details_first = true;

        $(document).on('sonata.add_element', '#field_container_{{ form.vars.id }}_groups', function () {

            $('#field_widget_{{ form.vars.id }}_groups').append( $('<div></div>').attr('id', 'field_widget_div_{{ form.vars.id }}_groups') );

            $('#field_widget_div_{{ form.vars.id }}_groups').append( $('#field_widget_{{ form.vars.id }}_groups table') );

            $('#field_widget_div_{{ form.vars.id }}_groups').addClass('box-body table-responsive no-padding').css({'margin-bottom':'10px'});

        });

        // ADD DETAILS ORDERING BY POSITION ARROWS

        apply_order_td_elements_by_position('datamodel', 'group', 'position');

        $(document).ready(function () {
            // ON DOCUMENT READY UPDATE ARROWS
            $('#field_container_{{ form.vars.id }}_groups').trigger('sonata.add_element');
        });
    </script>

    <script>
        // Step - conditions: options and configurations

        $(document).on('change', 'select[data-ctype="datamodel-condition-operator"]', function (event) {

            var id = $(this).attr('id');
            var id_data = id.split('_');
            var form_id = id_data[0];
            var item_pos = id_data[2];

            var target_type_id = form_id + '_conditions_' + item_pos + '_compareToType';
            var target_field_id = form_id + '_conditions_' + item_pos + '_compareToField';
            var target_function_id = form_id + '_conditions_' + item_pos + '_compareToFunction';
            var target_fixed_id = form_id + '_conditions_' + item_pos + '_compareToFixedValue';
            var target_dynamic_id = form_id + '_conditions_' + item_pos + '_compareToDynamicValue';

            var operator = $(this).select2('data').id;

            if (operator.startsWith('UNARY.')) {

                $('#' + target_type_id).select2({'required': false});
                $('#' + target_type_id).attr('required', false);
                $('#s2id_' + target_type_id).hide();

                //$('#' + target_fixed_id).val('');
                $('#' + target_fixed_id).attr('required', false);
                $('#' + target_fixed_id).hide();

                $('#' + target_dynamic_id).select2({'required': false});
                $('#' + target_dynamic_id).attr('required', false);
                $('#s2id_' + target_dynamic_id).hide();

                $('#' + target_field_id).select2({'required': false});
                $('#' + target_field_id).attr('required', false);
                $('#s2id_' + target_field_id).hide();

                $('#s2id_' + target_function_id).hide();

            }
            else  // if (operator.split('_')[1] === 'BINARY')
            {
                $('#' + target_type_id).select2({'required': true});
                $('#' + target_type_id).attr('required', true);
                $('#s2id_' + target_type_id).show();

                $('#' + target_type_id).trigger('change');
            }
        });

        $(document).on('change', 'select[data-ctype="datamodel-condition-comparetotype"]', function (event) {

            var id = $(this).attr('id');
            var id_data = id.split('_');
            var form_id = id_data[0];
            var item_pos = id_data[2];

            var target_fixed_id = form_id + '_conditions_' + item_pos + '_compareToFixedValue';
            var target_dynamic_id = form_id + '_conditions_' + item_pos + '_compareToDynamicValue';
            var target_field_id = form_id + '_conditions_' + item_pos + '_compareToField';
            var target_function_id = form_id + '_conditions_' + item_pos + '_compareToFunction';

            var type = $(this).select2('data') != null ? $(this).select2('data').id : null;

            // hidding all

            //$('#' + target_fixed_id).val('');
            $('#' + target_fixed_id).attr('required', false);
            $('#' + target_fixed_id).hide();

            $('#' + target_dynamic_id).select2({'required': false});
            $('#' + target_dynamic_id).attr('required', false);
            $('#s2id_' + target_dynamic_id).hide();

            $('#' + target_field_id).select2({'required': false});
            $('#' + target_field_id).attr('required', false);
            $('#s2id_' + target_field_id).hide();

            $('#s2id_' + target_function_id).hide();

            if (type == 'FIXED') {

                //$('#' + target_fixed_id).val('');
                $('#' + target_fixed_id).attr('required', true);
                $('#' + target_fixed_id).show();
            }
            else if (type == 'DYNAMIC') {

                $('#' + target_dynamic_id).select2({'required': true});
                $('#' + target_dynamic_id).attr('required', true);
                $('#s2id_' + target_dynamic_id).show();

                $('#s2id_' + target_function_id).show();

            }
            else if (type == 'FIELD') {

                $('#' + target_field_id).select2({'required': true});
                $('#' + target_field_id).attr('required', true);
                $('#s2id_' + target_field_id).show();

                $('#s2id_' + target_function_id).show();
            }
        });

        $(document).on('sonata.add_element', '#field_container_{{ form.vars.id }}_conditions', function () {

            $('select[data-ctype="datamodel-condition-operator"]').trigger('change');

            $('select[data-ctype="datamodel-condition-comparetotype"]').trigger('change');

            $('#field_container_{{ form.vars.id }}_conditions div.checkbox label span.control-label__text').remove();

            //-----------------------

            //$($('#field_widget_{{ form.vars.id }}_conditions table thead th')[0]).css({'width': '25px'});
            //$($('#field_widget_{{ form.vars.id }}_conditions table thead th')[1]).css({'width': '50px'});
            //$($('#field_widget_{{ form.vars.id }}_conditions table thead th')[2]).css({'width': '200px'});
            //$($('#field_widget_{{ form.vars.id }}_conditions table thead th')[3]).css({'width': '250px'});

            // mix tableName and customQuery tds

            var table_ths = $('#field_widget_{{ form.vars.id }}_conditions table thead th');
            $(table_ths[table_ths.length - 1]).hide();
            $(table_ths[table_ths.length - 2]).hide();

            var compare_to_fixeds_td = $('.control-group.sonata-ba-td-{{ form.vars.id }}_conditions-compareToFixedValue');

            var compare_to_fields_td = $('.control-group.sonata-ba-td-{{ form.vars.id }}_conditions-compareToField');

            var compare_to_dynamics_td = $('.control-group.sonata-ba-td-{{ form.vars.id }}_conditions-compareToDynamicValue');

            for (var i = 0; i < compare_to_fields_td.length; i++) {
                $(compare_to_fixeds_td[i]).append($(compare_to_fields_td[i]).children());
                $(compare_to_fixeds_td[i]).append($(compare_to_dynamics_td[i]).children());
                $(compare_to_fields_td[i]).hide();
                $(compare_to_dynamics_td[i]).hide();
            }

            $('#field_container_{{ form.vars.id }}_conditions').addClass('box-body table-responsive no-padding');

            $('#field_widget_{{ form.vars.id }}_conditions').append( $('<div></div>').attr('id', 'field_widget_div_{{ form.vars.id }}_conditions') );

            $('#field_widget_div_{{ form.vars.id }}_conditions').append( $('#field_widget_{{ form.vars.id }}_conditions table') );

            $('#field_widget_div_{{ form.vars.id }}_conditions').addClass('box-body table-responsive no-padding').css({'margin-bottom':'10px'});

        });

        // ADD DETAILS ORDERING BY POSITION ARROWS

        apply_order_td_elements_by_position('datamodel', 'condition', 'position');

        $(document).ready(function () {
            // ON DOCUMENT READY UPDATE ARROWS
            $('#field_container_{{ form.vars.id }}_conditions').trigger('sonata.add_element');
        });
    </script>

    <script>
        // Step - orders: options and configurations

        $(document).on('sonata.add_element', '#field_container_{{ form.vars.id }}_orders', function () {

            $('#field_container_{{ form.vars.id }}_orders div.checkbox label span.control-label__text').remove();

            $('#field_widget_{{ form.vars.id }}_orders').append( $('<div></div>').attr('id', 'field_widget_div_{{ form.vars.id }}_orders') );

            $('#field_widget_div_{{ form.vars.id }}_orders').append( $('#field_widget_{{ form.vars.id }}_orders table') );

            $('#field_widget_div_{{ form.vars.id }}_orders').addClass('box-body table-responsive no-padding').css({'margin-bottom':'10px'});


        });

        // ADD DETAILS ORDERING BY POSITION ARROWS

        apply_order_td_elements_by_position('datamodel', 'order', 'position');

        $(document).ready(function () {
            // ON DOCUMENT READY UPDATE ARROWS
            $('#field_container_{{ form.vars.id }}_orders').trigger('sonata.add_element');
        });
    </script>
{% endblock %}